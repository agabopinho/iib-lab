CREATE COMPUTE MODULE Criar_Request_Response_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE lastIndex INTEGER CARDINALITY(CACHE.Funcionarios[]);
		DECLARE newId INTEGER lastIndex + 1;
		
		SET CACHE.Funcionarios[newId].ns:Cargo = InputRoot.XMLNSC.ns:Criar.ns:funcionario.ns:Cargo;
		SET CACHE.Funcionarios[newId].ns:Cargo = InputRoot.XMLNSC.ns:Criar.ns:funcionario.ns:DataFim;
		SET CACHE.Funcionarios[newId].ns:Cargo = InputRoot.XMLNSC.ns:Criar.ns:funcionario.ns:DataInicio;
		SET CACHE.Funcionarios[newId].ns:Cargo = InputRoot.XMLNSC.ns:Criar.ns:funcionario.ns:DataNascimento;
		SET CACHE.Funcionarios[newId].ns:Cargo = newId;
		SET CACHE.Funcionarios[newId].ns:Cargo = InputRoot.XMLNSC.ns:Criar.ns:funcionario.ns:Nome;
		SET CACHE.Funcionarios[newId].ns:Cargo = InputRoot.XMLNSC.ns:Criar.ns:funcionario.ns:SobreNome;
		
		SET OutputRoot.XMLNSC.ns:CriarResponse.ns:CriarResult = newId;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;